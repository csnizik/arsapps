name: Stage and Production Deployment

on:
  push:
    branches: [ stage ]
    tags:
      - 'prod_*'
  workflow_dispatch:

env:
  REGISTRY: your-acr-registry.azurecr.io
  IMAGE_NAME: drupal-app

jobs:
  # Code quality checks (runs for all deployments)
  code-quality:
    uses: ./.github/workflows/code-quality.yml
    with:
      enable_phpcs: true
      enable_eslint: true
      phpcs_standard: 'Drupal'
      custom_paths: 'web/modules/custom,web/themes/custom'

  # Stage deployment job
  stage-deploy:
    if: github.ref == 'refs/heads/stage'
    needs: code-quality
    uses: ./.github/workflows/reusable-build.yml
    with:
      environment: 'staging'
      registry: 'your-acr-registry.azurecr.io'
      image_name: 'drupal-app'
      dockerfile_path: './docker/Dockerfile'
      enable_security_scan: true
    secrets:
      acr_username: ${{ secrets.ACR_USERNAME }}
      acr_password: ${{ secrets.ACR_PASSWORD }}

  # Production deployment job
  production-deploy:
    if: startsWith(github.ref, 'refs/tags/prod_')
    needs: code-quality
    uses: ./.github/workflows/reusable-build.yml
    with:
      environment: 'production'
      registry: 'your-acr-registry.azurecr.io'
      image_name: 'drupal-app'
      dockerfile_path: './docker/Dockerfile'
      enable_security_scan: true
    secrets:
      acr_username: ${{ secrets.ACR_USERNAME }}
      acr_password: ${{ secrets.ACR_PASSWORD }}

  # Optional: Summary job to aggregate results
  deployment-summary:
    if: always() && (needs.stage-deploy.result != 'skipped' || needs.production-deploy.result != 'skipped')
    needs: [code-quality, stage-deploy, production-deploy]
    runs-on: ubuntu-latest
    steps:
    - name: Generate deployment summary
      run: |
        echo "# Deployment Summary" >> $GITHUB_STEP_SUMMARY
        
        # Code Quality Results
        echo "## Code Quality" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ needs.code-quality.result }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.code-quality.result }}" == "success" ]; then
          echo "✅ All coding standards checks passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Code quality issues found - deployment blocked" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.stage-deploy.result }}" != "skipped" ]; then
          echo "## Stage Deployment" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ needs.stage-deploy.result }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.stage-deploy.result }}" == "success" ]; then
            echo "**Image Tags:** ${{ needs.stage-deploy.outputs.image_tags }}" >> $GITHUB_STEP_SUMMARY
            echo "**Image Digest:** ${{ needs.stage-deploy.outputs.image_digest }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.production-deploy.result }}" != "skipped" ]; then
          echo "## Production Deployment" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ needs.production-deploy.result }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.production-deploy.result }}" == "success" ]; then
            echo "**Image Tags:** ${{ needs.production-deploy.outputs.image_tags }}" >> $GITHUB_STEP_SUMMARY
            echo "**Image Digest:** ${{ needs.production-deploy.outputs.image_digest }}" >> $GITHUB_STEP_SUMMARY
          fi
        fi